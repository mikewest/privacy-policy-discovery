<pre class='metadata'>
Title: Policy Discovery
Shortname: policy-discovery
Level: None
Status: w3c/UD
ED: https://mikewest.github.io/privacy-policy-discovery/
Editor: Mike West 56384, Google Inc., mkwst@google.com
Markup Shorthands: markdown yes
Abstract:
  This specification defines well-known URLs which allow an origin to make its privacy policy and
  terms of service easily discoverable: <code>/.well-known/privacy-policy</code>, and
  <code>/.well-known/terms-of-service</code>. It also defines link types which can likewise improve
  discoverability: <code>rel="privacy-policy"</code> and <code>rel="terms-of-service"</code>.
</pre>
<pre class='link-defaults'>
spec:html; type:element; text:a
spec:html; type:element; text:link
spec:html; type:dfn; for:/; text:origin
spec:fetch; type:dfn; for:/; text:response
</pre>
<pre class="anchors">
spec: HTML; urlPrefix: https://html.spec.whatwg.org/
    type: dfn
        text: body-ok
        text: link type
</pre>

Introduction {#intro}
=====================

<em>This section is non-normative.</em>

Websites' privacy policies and terms of service are important documents, describing the ways in
which data that flows through the site can be used, managed, shared, combined with other data
sources; and the agreements under which the website offers its services. The precise definition
and impact of these policy documents will vary based on a number of factors, but it
seems clear that whatever the exact contours of the legal framework in which it exists, they
represents a set of promises that the site's users ought to be able to rely upon.  It's therefore
important for users to be able to easily discover, read through, and rely upon them interacting
with a site.

Recognizing this, many sites will place a prominent link to their policies in a place where
they believe users might look for it: the site's footer, for example. This document suggests two
improvements to discoverability which may help user agents and other tools make policy documents
more accessible to users (perhaps by exposing links to a site's policies in prominent places
in the user agent's UI):

1.  [[#well-known]] defines the `/.well-known/privacy-policy` and `/.well-known/terms-of-service`
    well-known URIs [[RFC8615]].

2.  [[#link-type]] defines the `privacy-policy` and `terms-of-service` link types, which can be
    used to annotate <{a}> and <{link}> elements that reference the policies that apply to a
    given document (and <{area}> too, I suppose... why not?).

Well-Known URLs {#well-known}
=============================

The `privacy-policy` Well-Known URL {#well-known-privacy-policy}
----------------------------------------------------------------

An origin's <dfn>privacy policy URL</dfn> is a URL that directly identifies the origin's privacy
policy resource. An origin's <dfn>well-known privacy policy URL</dfn> is a URL whose [=url/path=]
component is `/.well-known/privacy-policy`. Responses to requests for this resource should redirect
to the [=privacy policy URL=], thereby facilitating its automated discovery.

Given an [=origin=] (|origin|), a client can <dfn abstract-op>construct a well-known privacy
policy URL</dfn> by running the following steps:

1.  If |origin| is not a [=potentially trustworthy origin=], return `failure`.

    Note: Origins which are not delivered securely can make no meaningful promises about the privacy
    of data flowing to and from the client, as the communication channel is plaintext and available
    to (and manipulatable by) anyone on the network between the client and the server.

2.  Assert: |origin| is a [=tuple origin=].

3.  Let |url| be a new URL with values set as follows:

    *   [=url/scheme=]: |origin|'s scheme.
    *   [=url/host=]: |origin|'s host.
    *   [=url/port=]: |origin|'s port.
    *   [=url/path=]: « ".well-known", "privacy-policy" »

4. Return |url|.

The `terms-of-service` Well-Known URL {#well-known-terms-of-service}
--------------------------------------------------------------------

An origin's <dfn>terms of service URL</dfn> is a URL that directly identifies the origin's terms of
service resource. An origin's <dfn>well-known terms of service URL</dfn> is a URL whose [=url/path=]
component is `/.well-known/terms-of-service`. Responses to requests for this resource should redirect
to the [=terms of service URL=], thereby facilitating its automated discovery.

Given an [=origin=] (|origin|), a client can <dfn abstract-op>construct a well-known terms of
service URL</dfn> by running the following steps:

1.  If |origin| is not a [=potentially trustworthy origin=], return `failure`.

    Note: Origins which are not delivered securely can make no meaningful promises about the privacy
    of data flowing to and from the client, as the communication channel is plaintext and available
    to (and manipulatable by) anyone on the network between the client and the server.

2.  Assert: |origin| is a [=tuple origin=].

3.  Let |url| be a new URL with values set as follows:

    *   [=url/scheme=]: |origin|'s scheme.
    *   [=url/host=]: |origin|'s host.
    *   [=url/port=]: |origin|'s port.
    *   [=url/path=]: « ".well-known", "terms-of-service" »

4. Return |url|.

Server Considerations {#well-known-server}
------------------------------------------

Servers complying with this document's recommendations SHOULD respond to requests for an origin's
[=well-known privacy policy URL=] and [=well-known terms of service URL=] with a [=response=]
whose [=response/status=] is one of « 302, 303, 307 », and which contains a `Location` header
whose value is the origin's [=privacy policy URL=] or [=terms of service URL=], respectively.

Servers MAY also return a `Location` header whose value is a URL that, in turn, redirects to the
requested resource. 

Note: The status codes here support only temporary redirects. As discussed in
[w3c/webappsec-change-password-url#13](https://github.com/w3c/webappsec-change-password-url/issues/13),
this intentionally excludes permanent redirect codes in order to ensure that intermediate caches and
client applications continue to check the well-known URL to catch changes in a site's structure.

An origin's [=privacy policy URL=] does not need to live on that origin. Clients should support
`https://example.com`'s policy documents being hosted by `https://policies.example.com/` or
`https://holding-company.example/`, for example.

<div class="example">
Assuming that `https://example.com/` has a privacy policy which lives at
`https://example.com/privacy`, then a server should respond to a client's request for
`https://example.com/.well-known/privacy-policy` with a response like the following:

```http
HTTP/1.1 307 Temporary Redirect
...
Location: https://example.com/privacy
```

</div>

Client Considerations {#well-known-client}
------------------------------------------

Given the potentially-cross-origin nature of these requests, clients making automated requests for
these well-known URLs are encouraged to do so with the request's [=request/credentials mode=] set
to `omit` and its [=request/referrer=] set to `no-referrer`.

Link Types {#link-type}
=======================

Note: The following two sections define the `privacy-policy` and `terms-of-service` link types. If
standardized, these should eventually migrate to HTML's
[list of link types](https://html.spec.whatwg.org/multipage/links.html#linkTypes).

The `privacy-policy` Link Type {#link-type-privacy-policy}
----------------------------------------------------------

Sites are encouraged to place links to their privacy policy in conspicuous places where users might
look for them. To improve discoverability, this document defines the `privacy-policy` [=link type=]
as an annotation for <{a}> and <{link}> elements, enhancing their semantic meaning in a way user
agents can understand and make available to users. 

<div class="example">
Assuming that `https://example.com/` has a privacy policy which lives at
`https://example.com/privacy`, it might include the following link in its footer:

```html
<a rel="privacy-policy" href="https://example.com/privacy">Privacy Policy</a>
```

It might also include the following in its <{head}>:

```html
<link rel="privacy-policy" href="https://example.com/privacy">
```
</div>

This extension to HTML's set of link types has the following properties:

:   Link Type
::  `privacy-policy`
:   Effect on <{link}>
::  [=Hyperlink=]
:   Effect on <{a}>, <{area}>
::  [=Hyperlink=]
:   Effect on <{form}>
::  Not allowed
:   [=body-ok=]
::  Yes
:   Has <{link}> processing
::  No
:   Brief Description
::  Refers to a document which contains information about the data collection and usage practices
    that apply to the current context. This may be a standalone privacy policy, or a specific
    section of some more general document.

<div class="note" role="note">
<span class="marker">Note:</span>
The [microformats wiki existing-rel-values page](https://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions)
contains a reference to a `privacy` link type. This document suggests "`privacy-policy`" instead, as that
seems to be more commonly used on today's internet: HTTP Archive data from August, 2023 suggests
that `rel="privacy-policy"` was used on 285,421 distinct documents, while `rel="privacy"` was used
on only 692.

<details>
  <summary>HTTP Archive Query</summary>

```sql
-- This query is an undercount (insofar as it doesn't account for
-- multiple link types), but likely in the right order of magnitude.
SELECT
  COUNTIF(REGEXP_CONTAINS(LOWER(body), r"rel=(privacy[ >]|\'privacy\'|\"privacy\")")) as privacy,
  COUNTIF(REGEXP_CONTAINS(LOWER(body), r"rel=(privacy-policy|\'privacy-policy\'|\"privacy-policy\")")) as privacy_policy
FROM
  \`httparchive.response_bodies.2023_08_01_desktop\`
WHERE
  page = url
```


</details>

</div>


The `terms-of-service` Link Type {#link-type-terms-of-service}
--------------------------------------------------------------

Sites are encouraged to place links to their terms of service in conspicuous places where users
might look for them. To improve discoverability, this document defines the `terms-of-service`
[=link type=] as an annotation for <{a}> and <{link}> elements, enhancing their semantic meaning in
a way user agents can understand and make available to users. 

<div class="example">
Assuming that `https://example.com/` has a terms of service which lives at
`https://example.com/tos`, it might include the following link in its footer:

```html
<a rel="terms-of-service" href="https://example.com/tos">Terms of Service</a>
```

It might also include the following in its <{head}>:

```html
<link rel="terms-of-service" href="https://example.com/tos">
```
</div>

This extension to HTML's set of link types has the following properties:

:   Link Type
::  `terms-of-service`
:   Effect on <{link}>
::  [=Hyperlink=]
:   Effect on <{a}>, <{area}>
::  [=Hyperlink=]
:   Effect on <{form}>
::  Not allowed
:   [=body-ok=]
::  Yes
:   Has <{link}> processing
::  No
:   Brief Description
::  Refers to a document which contains information about the agreements between a service provider
    and users who wish to use the service provided.

Note: HTTP Archive didn't give much guidance with regard to naming. The most popular <{a/rel}>
attribute value that contained the word "terms" was `rel="terms of service"`, which unfortunately
isn't an appropriate link type. This document is running with `terms-of-service`, though other
names could certainly be reasonable (`terms-and-conditions`, `tos`, etc).


Implementation Considerations {#impl}
=====================================

<em>This section is non-normative.</em>

Scope {#scope}
-----------------------

The well-known URLs defined in this document provide a mechanism through which one and only one
document can be declared as binding for the entirety of an origin. This is reasonable, as that's
the only security boundary that the web offers: data flowing to one page on an origin is accessible
to other pages on the origin, as is storage, and potential server-side interrelations between pages
are opaque to the user. Site operators are encouraged to make such global policy documents
available.

It's important to note, however, that websites might host policies for applications that
run outside the context of the web platform. `https://amazing-mobile-app.example` might offer a
website alongside native apps on multiple platforms with differing data collection and usage
characteristics. In this case, clients should expect the well-known URLs to represent only the
policies that applies to the web origin.

Note: It would be possible to extend this proposal with specific well-known links for 
policies on a platform-by-platform basis (e.g. `/.well-known/privacy-policy/Windows`,
`/.well-known/privacy-policy?platform=iOS`, or some other spelling). It's not clear whether that
addition is worthwhile, but it would be fairly straightforward to define by adding a
<var ignore>platform</var> parameter to the [$construct a well-known privacy policy URL$] and
[$construct a well-known terms of service URL$] algorithm.


Relation to P3P {#p3p}
----------------------

The [[P3P]] specification defines a machine-readable representation of a site's privacy practices,
and it's reasonable to wonder whether this proposal is in some way related. It is not: this
proposal is substantially narrower, suggesting only that it should be trivial to discover the URL
at which origin's existing privacy policy prose resides.


IANA Considerations {#iana}
===========================

This document defines the `privacy-policy` and `terms-of-service` well-known URIs. These
will be submitted to the IESG for review, approval, and registration with IANA using the template
defined in [[RFC8615]] as follows:

:   URI Suffix
::  privacy-policy
:   Change Controller
::  W3C, possibly?
:   Specification Document
::  The [[#well-known-privacy-policy]] section of this document.
:   Related Information:
::  None.

And:

:   URI Suffix
::  terms-of-service
:   Change Controller
::  W3C, possibly?
:   Specification Document
::  The [[#well-known-terms-of-service]] section of this document.
:   Related Information:
::  None.


Acknowledgements {#acks}
========================

This document borrowed structure and content liberally from Ricky Mondello and Theresa O'Connor's
[[change-password-url]].
